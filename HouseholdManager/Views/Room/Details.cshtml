@model HouseholdManager.Models.ViewModels.RoomDetailsViewModel
@using HouseholdManager.Models.Enums
@using Microsoft.AspNetCore.Identity
@inject UserManager<HouseholdManager.Models.Entities.ApplicationUser> UserManager

@{
    ViewData["Title"] = Model.Room.Name;
    var currentUser = await UserManager.GetUserAsync(User);
    var isSystemAdmin = currentUser?.IsSystemAdmin ?? false;
}

<div class="container">
    <!-- Breadcrumb -->
    <nav aria-label="breadcrumb" class="mb-4">
        <ol class="breadcrumb">
            <li class="breadcrumb-item">
                <a asp-controller="Household" asp-action="Index" class="text-decoration-none">
                    <i class="fas fa-home me-1"></i>My Households
                </a>
            </li>
            <li class="breadcrumb-item">
                <a asp-controller="Household" asp-action="Details" asp-route-id="@Model.Room.HouseholdId" class="text-decoration-none">
                    @Model.Room.Household.Name
                </a>
            </li>
            <li class="breadcrumb-item">
                <a asp-controller="Room" asp-action="Index" asp-route-householdId="@Model.Room.HouseholdId" class="text-decoration-none">
                    Rooms
                </a>
            </li>
            <li class="breadcrumb-item active" aria-current="page">@Model.Room.Name</li>
        </ol>
    </nav>

    <!-- Success/Error Messages -->
    @if (TempData["Success"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            <i class="fas fa-check-circle me-2"></i>
            @TempData["Success"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["Error"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show" role="alert">
            <i class="fas fa-exclamation-triangle me-2"></i>
            @TempData["Error"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    <div class="row justify-content-center">
        <div class="col-lg-10">
            <!-- Room Header -->
            <div class="card shadow-sm mb-4">
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-8">
                            <div class="d-flex align-items-start">
                                @if (!string.IsNullOrEmpty(Model.Room.PhotoPath))
                                {
                                    <div class="me-4">
                                        <img src="~/@Model.Room.PhotoPath" alt="@Model.Room.Name" 
                                             class="rounded shadow-sm" style="width: 120px; height: 120px; object-fit: cover;">
                                    </div>
                                }
                                else
                                {
                                    <div class="bg-light rounded d-flex align-items-center justify-content-center me-4 shadow-sm" 
                                         style="width: 120px; height: 120px;">
                                        <i class="fas fa-door-open text-muted fa-2x"></i>
                                    </div>
                                }
                                
                                <div class="flex-grow-1">
                                    <h1 class="h3 mb-2">@Model.Room.Name</h1>
                                    
                                    @if (!string.IsNullOrEmpty(Model.Room.Description))
                                    {
                                        <p class="text-muted mb-3">@Model.Room.Description</p>
                                    }
                                    
                                    <div class="row g-3">
                                        <div class="col-sm-6">
                                            <div class="d-flex align-items-center">
                                                <i class="fas fa-tasks text-info me-2"></i>
                                                <span class="fw-semibold">Active Tasks:</span>
                                                <span class="badge bg-info ms-2">@Model.Room.ActiveTaskCount</span>
                                            </div>
                                        </div>
                                        <div class="col-sm-6">
                                            <div class="d-flex align-items-center text-muted">
                                                <i class="fas fa-calendar me-2"></i>
                                                <span>Created @Model.Room.CreatedAt.ToLocalDateLong()</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        
                        <div class="col-md-4 text-md-end mt-3 mt-md-0">
                            @if (Model.IsOwner || isSystemAdmin)
                            {
                                <div class="d-grid gap-2">
                                    @if (Model.IsOwner)
                                    {
                                        <a asp-action="Upsert" asp-route-id="@Model.Room.Id" 
                                           class="btn btn-warning">
                                            <i class="fas fa-edit me-1"></i>Edit Room
                                        </a>
                                        
                                        <button type="button" class="btn btn-outline-primary" 
                                                data-bs-toggle="modal" 
                                                data-bs-target="#photoModal">
                                            <i class="fas fa-camera me-1"></i>Manage Photo
                                        </button>
                                    }
                                    
                                    <button type="button" class="btn btn-outline-danger" 
                                            data-bs-toggle="modal" 
                                            data-bs-target="#deleteModal">
                                        <i class="fas fa-trash me-1"></i>Delete Room
                                    </button>
                                </div>
                            }
                            else
                            {
                                <a asp-action="Index" asp-route-householdId="@Model.Room.HouseholdId" 
                                   class="btn btn-outline-secondary">
                                    <i class="fas fa-arrow-left me-1"></i>Back to Rooms
                                </a>
                            }
                        </div>
                    </div>
                </div>
            </div>

            <!-- Room Tasks -->
            <div class="card shadow-sm">
                <div class="card-header bg-light d-flex justify-content-between align-items-center">
                    <h5 class="card-title mb-0">
                        <i class="fas fa-tasks text-info me-2"></i>
                        Tasks in this Room (@Model.Room.Tasks.Count)
                    </h5>
                    @if (Model.IsOwner)
                    {
                        <a asp-controller="Task" asp-action="Upsert"
                           asp-route-householdId="@Model.Room.HouseholdId"
                           asp-route-roomId="@Model.Room.Id"
                           class="btn btn-sm btn-info">
                            <i class="fas fa-plus me-1"></i>Add Task
                        </a>
                    }
                </div>
                <div class="card-body">
                    @if (Model.Room.Tasks.Any())
                    {
                        <div class="table-responsive">
                            <table class="table table-hover">
                                <thead class="table-light">
                                    <tr>
                                        <th>Task Name</th>
                                        <th>Type</th>
                                        <th>Schedule/Due</th>
                                        <th>Priority</th>
                                        <th>Assigned To</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var task in Model.Room.Tasks.OrderBy(t => t.Priority).ThenBy(t => t.Title))
                                    {
                                        <tr class="@(!task.IsActive ? "table-secondary" : "")">
                                            <td>
                                                <h6 class="mb-0">@task.Title</h6>
                                                @if (!string.IsNullOrEmpty(task.Description))
                                                {
                                                    <small class="text-muted">@task.Description</small>
                                                }
                                            </td>
                                            <td>
                                                @if (task.Type == HouseholdManager.Models.Enums.TaskType.Regular)
                                                {
                                                    <span class="badge bg-primary">Regular</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-info">One-time</span>
                                                }
                                            </td>
                                            <td>
                                                @if (task.Type == HouseholdManager.Models.Enums.TaskType.Regular && task.ScheduledWeekday.HasValue)
                                                {
                                                    <span class="text-muted">@task.ScheduledWeekday.Value.ToString()s</span>
                                                }
                                                else if (task.Type == HouseholdManager.Models.Enums.TaskType.OneTime && task.DueDate.HasValue)
                                                {
                                                    <span class="@(task.IsOverdue ? "text-danger" : "text-muted")">
                                                        @task.DueDate.Value.ToLocalDateShort()
                                                        @if (task.IsOverdue)
                                                        {
                                                            <i class="fas fa-exclamation-triangle ms-1"></i>
                                                        }
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                @switch (task.Priority)
                                                {
                                                    case HouseholdManager.Models.Enums.TaskPriority.High:
                                                        <span class="badge bg-danger">High</span>
                                                        break;
                                                    case HouseholdManager.Models.Enums.TaskPriority.Medium:
                                                        <span class="badge bg-warning text-dark">Medium</span>
                                                        break;
                                                    case HouseholdManager.Models.Enums.TaskPriority.Low:
                                                        <span class="badge bg-success">Low</span>
                                                        break;
                                                }
                                            </td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(task.AssignedUserId))
                                                {
                                                    <span>@task.AssignedUser?.FullName</span>
                                                }
                                                else
                                                {
                                                    <span class="text-warning">
                                                        <i class="fas fa-exclamation-triangle me-1"></i>Unassigned
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                @if (!task.IsActive)
                                                {
                                                    <span class="badge bg-secondary">Inactive</span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-success">Active</span>
                                                }
                                            </td>
                                            <td>
                                                <div class="btn-group btn-group-sm">
                                                    <a asp-controller="Task" asp-action="Details" asp-route-id="@task.Id" 
                                                       class="btn btn-outline-primary" title="View Details">
                                                        <i class="fas fa-eye"></i>
                                                    </a>
                                                    @if (Model.IsOwner)
                                                    {
                                                        <a asp-controller="Task" asp-action="Upsert" asp-route-id="@task.Id" 
                                                           class="btn btn-outline-warning" title="Edit Task">
                                                            <i class="fas fa-edit"></i>
                                                        </a>
                                                    }
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    }
                    else
                    {
                        <div class="text-center py-4">
                            <i class="fas fa-tasks fa-3x text-muted mb-3"></i>
                            <h5 class="text-muted">No Tasks Yet</h5>
                            <p class="text-muted mb-4">This room doesn't have any tasks assigned to it.</p>
                            @if (Model.IsOwner)
                            {
                                <a asp-controller="Task" asp-action="Upsert"
                                   asp-route-householdId="@Model.Room.HouseholdId"
                                   asp-route-roomId="@Model.Room.Id"
                                   class="btn btn-sm btn-info">
                                    <i class="fas fa-plus me-1"></i>Create First Task
                                </a>
                            }
                        </div>
                    }
                </div>
                @if (Model.Room.Tasks.Any())
                {
                    <div class="card-footer bg-transparent text-center">
                        <a asp-controller="Task" asp-action="Index" asp-route-householdId="@Model.Room.HouseholdId" 
                           class="btn btn-outline-info">
                            <i class="fas fa-list me-1"></i>View All Household Tasks
                        </a>
                    </div>
                }
            </div>
        </div>
    </div>
</div>

<!-- Photo Management Modal -->
<div class="modal fade" id="photoModal" tabindex="-1" aria-labelledby="photoModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title" id="photoModalLabel">
                    <i class="fas fa-camera me-2"></i>Manage Room Photo
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                @if (!string.IsNullOrEmpty(Model.Room.PhotoPath))
                {
                    <div class="text-center mb-4">
                        <img src="~/@Model.Room.PhotoPath" alt="@Model.Room.Name" 
                             class="img-fluid rounded shadow-sm" style="max-height: 200px;">
                    </div>
                    
                    <div class="text-center mb-4">
                        <form asp-action="DeletePhoto" asp-route-id="@Model.Room.Id" method="post" class="d-inline">
                            @Html.AntiForgeryToken()
                            <button type="submit" class="btn btn-outline-danger" 
                                    onclick="return confirm('Are you sure you want to delete this photo?')">
                                <i class="fas fa-trash me-1"></i>Delete Current Photo
                            </button>
                        </form>
                    </div>
                    
                    <hr>
                }
                
                <h6>Upload New Photo</h6>
                <form asp-action="UploadPhoto" asp-route-id="@Model.Room.Id" method="post" enctype="multipart/form-data">
                    @Html.AntiForgeryToken()
                    <div class="mb-3">
                        <input type="file" name="photo" class="form-control" accept="image/*" required>
                        <div class="form-text">
                            <i class="fas fa-info-circle me-1"></i>
                            Supported formats: JPG, PNG, GIF, WebP. Max size: 5MB
                        </div>
                    </div>
                    <div class="text-end">
                        <button type="button" class="btn btn-secondary me-2" data-bs-dismiss="modal">Cancel</button>
                        <button type="submit" class="btn btn-primary">
                            <i class="fas fa-upload me-1"></i>Upload Photo
                        </button>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<!-- Delete Confirmation Modal -->
<div class="modal fade" id="deleteModal" tabindex="-1" aria-labelledby="deleteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header border-0">
                <h5 class="modal-title text-danger" id="deleteModalLabel">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    Delete Room
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <p class="mb-3">Are you sure you want to delete the room <strong>@Model.Room.Name</strong>?</p>
                
                @if (Model.Room.Tasks.Any())
                {
                    <div class="alert alert-warning">
                        <i class="fas fa-exclamation-triangle me-2"></i>
                        <strong>Warning:</strong> This room has @Model.Room.Tasks.Count task(s). 
                        Deleting this room will also delete all associated tasks and their execution history.
                    </div>
                }
                
                <div class="alert alert-danger">
                    <i class="fas fa-exclamation-triangle me-2"></i>
                    <strong>Warning:</strong> This action cannot be undone. All room data and photos will be permanently deleted.
                </div>
            </div>
            <div class="modal-footer border-0">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                <form asp-action="Delete" asp-route-id="@Model.Room.Id" method="post" style="display: inline;">
                    @Html.AntiForgeryToken()
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash me-1"></i>Delete Room
                    </button>
                </form>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Auto-hide alerts after 5 seconds
        setTimeout(function() {
            const alerts = document.querySelectorAll('.alert');
            alerts.forEach(function(alert) {
                const bsAlert = new bootstrap.Alert(alert);
                bsAlert.close();
            });
        }, 5000);
    </script>
}